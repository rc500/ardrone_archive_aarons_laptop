# basic edge detection code

from PIL import Image
import ImageFilter
import cv
import numpy as np
import sys

#load greyscale image
img1 = cv.LoadImageM("s1.jpg",cv.CV_LOAD_IMAGE_GRAYSCALE)
#load colour image for displaying
im1 = cv.LoadImageM("s1.jpg");

#load greyscale image
img2 = cv.LoadImageM("s2.jpg",cv.CV_LOAD_IMAGE_GRAYSCALE)
#load colour image for displaying
im2 = cv.LoadImageM("s2.jpg");

feature= 'surf';
if feature=='surf':
     #SURF implementation
     (keypoints1, descriptors1) = cv.ExtractSURF(img1, None, cv.CreateMemStorage(), (0, 3000, 3,1))
     (keypoints2, descriptors2) = cv.ExtractSURF(img2, None, cv.CreateMemStorage(), (0, 3000, 3,1))


     for ((x, y), laplacian, size, dir, hessian) in keypoints1:
        cv.Circle(im1,(int(x),int(y)) ,3,cv.RGB(255, 255, 0))

     for ((x, y), laplacian, size, dir, hessian) in keypoints2:
        cv.Circle(im2,(int(x),int(y)) ,3,cv.RGB(255, 255, 0))        
    

cv.NamedWindow("test1",cv.CV_WINDOW_AUTOSIZE)
cv.ShowImage("test1", im1)

cv.NamedWindow("test2",cv.CV_WINDOW_AUTOSIZE)
cv.ShowImage("test2", im2)
cv.WaitKey(0) 




